<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.codeprobe.butin.repository.ArticleDao">

    <resultMap id="BaseResultMap" type="cn.codeprobe.butin.model.po.Article">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="body_id" jdbcType="BIGINT" property="bodyId"/>
        <result column="author_id" jdbcType="BIGINT" property="authorId"/>
        <result column="summary" jdbcType="VARCHAR" property="summary"/>
        <result column="comment_counts" jdbcType="INTEGER" property="commentCounts"/>
        <result column="view_counts" jdbcType="INTEGER" property="viewCounts"/>
        <result column="weight" jdbcType="INTEGER" property="weight"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        , title, body_id, author_id, summary, comment_counts, view_counts, weight, create_date
    </sql>

    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bt_article
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="select" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM bt_article WHERE status = 2
    </select>

    <select id="selectByIds" resultMap="BaseResultMap" parameterType="list">
        SELECT
        <include refid="Base_Column_List" />
        FROM bt_article WHERE id in
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectByViewCountAndComment" resultMap="BaseResultMap" parameterType="list">
        SELECT id, title, view_counts, comment_counts
        FROM bt_article
        ORDER BY view_counts DESC, comment_counts DESC LIMIT #{limit}
    </select>

    <select id="selectByCreateTime" resultMap="BaseResultMap" parameterType="list">
        SELECT id, title, create_date
        FROM bt_article
        ORDER BY create_date DESC LIMIT #{limit}
    </select>

    <select id="selectArchives" resultType="cn.codeprobe.butin.model.vo.ArticleArchiveVO" parameterType="list">
        SELECT DISTINCT YEAR (a.create_date) AS `year`, MONTH (a.create_date) AS `month`
        FROM bt_article AS a
        ORDER BY `year` DESC, `month` DESC
    </select>

    <select id="selectNumByYearAndMonth" resultType="int" parameterType="string">
        select COUNT(*) num
        from bt_article
        where YEAR (create_date) = #{year}
          AND MONTH (create_date) = #{month}
    </select>

    <update id="updateCommentCount" parameterType="long">
        UPDATE bt_article
        SET comment_counts = comment_counts + 1
        WHERE id = #{articleId}
    </update>

    <update id="deleteByModifyStatus" parameterType="long">
        UPDATE bt_article
        SET status = 0
        WHERE id = #{id}
    </update>

    <update id="updateNewArticleParms">
        UPDATE bt_article
        SET comment_counts = #{param1},
            view_counts    = #{param2},
            weight         = #{param3}
        WHERE id = #{param4}
    </update>

    <insert id="insert" keyProperty="id" parameterType="cn.codeprobe.butin.model.po.Article"
            useGeneratedKeys="true">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into bt_article (title, body_id, author_id, summary,
        comment_counts, view_counts, weight, status, create_date)
        values (#{title,jdbcType=VARCHAR}, #{bodyId,jdbcType=BIGINT}, #{authorId,jdbcType=BIGINT},
        #{summary,jdbcType=VARCHAR},#{commentCounts,jdbcType=INTEGER}, #{viewCounts,jdbcType=INTEGER},
        #{weight,jdbcType=INTEGER}, #{status,jdbcType=INTEGER} ,#{createDate,jdbcType=TIMESTAMP})
    </insert>

</mapper>